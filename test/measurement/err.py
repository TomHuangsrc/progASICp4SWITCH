import random
import math
import sys
quint32 = 4294967295
magic = 292738
plut = [2429315,2414826,2400424,2386107,2371876,2357729,2343667,2329689,2315795,2301983,2288253,2274605,2261039,2247554,2234149,2220824,2207579,2194412,2181324,2168314,2155382,2142527,2129748,2117046,2104420,2091868,2079392,2066990,2054662,2042408,2030226,2018118,2006081,1994116,1982223,1970401,1958649,1946967,1935355,1923812,1912338,1900932,1889595,1878325,1867122,1855986,1844917,1833913,1822975,1812103,1801295,1790552,1779872,1769257,1758705,1748215,1737788,1727424,1717121,1706880,1696700,1686580,1676521,1666522,1656582,1646702,1636881,1627118,1617414,1607767,1598178,1588646,1579171,1569753,1560390,1551084,1541833,1532637,1523496,1514410,1505377,1496399,1487474,1478602,1469784,1461018,1452304,1443642,1435032,1426473,1417965,1409508,1401101,1392745,1384438,1376181,1367973,1359815,1351704,1343642,1335629,1327663,1319744,1311873,1304049,1296271,1288540,1280855,1273215,1265622,1258073,1250570,1243111,1235697,1228327,1221001,1213719,1206480,1199284,1192131,1185021,1177953,1170928,1163944,1157002,1150102,1143242,1136424,1129646,1122908,1116211,1109554,1102936,1096358,1089819,1083319,1076858,1070435,1064051,1057705,1051396,1045126,1038892,1032696,1026537,1020414,1014328,1008279,1002265,996287,990345,984439,978567,972731,966929,961162,955430,949731,944067,938436,932839,927276,921745,916248,910783,905351,899951,894584,889248,883944,878672,873432,868222,863044,857897,852780,847694,842638,837612,832617,827651,822715,817808,812930,808082,803262,798471,793709,788975,784270,779592,774942,770320,765726,761159,756619,752107,747621,743162,738730,734324,729944,725590,721263,716961,712685,708434,704209,700009,695834,691684,687559,683458,679382,675330,671302,667298,663318,659362,655429,651520,647634,643772,639932,636115,632322,628550,624801,621075,617371,613689,610028,606390,602773,599178,595605,592052,588521,585011,581522,578054,574606,571179,567772,564386,561020,557674,554348,551042,547755,544488,541241,538013,534804,531614,528443,525292,522159,519044,515949,512871,509813,506772,503749,500745,497758,494790,491839,488905,485989,483091,480209,477345,474498,471668,468855,466059,463279,460516,457770,455039,452325,449628,446946,444280,441630,438996,436378,433775,431188,428617,426060,423519,420993,418482,415986,413505,411039,408588,406151,403728,401320,398927,396548,394182,391831,389494,387171,384862,382567,380285,378017,375762,373521,371294,369079,366878,364690,362515,360352,358203,356067,353943,351832,349734,347648,345574,343513,341465,339428,337404,335391,333391,331402,329426,327461,325508,323567,321637,319719,317812,315916,314032,312159,310297,308447,306607,304778,302960,301154,299357,297572,295797,294033,292279,290536,288803,287081,285369,283667,281975,280293,278621,276959,275308,273666,272033,270411,268798,267195,265601,264017,262443,260877,259321,257775,256237,254709,253190,251680,250179,248687,247203,245729,244263,242807,241358,239919,238488,237066,235652,234246,232849,231460,230080,228708,227344,225988,224640,223300,221968,220644,219328,218020,216720,215427,214142,212865,211596,210334,209079,207832,206593,205360,204136,202918,201708,200505,199309,198120,196939,195764,194596,193436,192282,191135,189995,188862,187736,186616,185503,184397,183297,182204,181117,180037,178963,177896,176835,175780,174731,173689,172653,171624,170600,169583,168571,167566,166566,165573,164585,163604,162628,161658,160694,159735,158783,157836,156894,155959,155028,154104,153185,152271,151363,150460,149563,148671,147784,146903,146026,145156,144290,143429,142574,141723,140878,140038,139203,138372,137547,136727,135911,135101,134295,133494,132698,131906,131120,130338,129560,128788,128019,127256,126497,125742,124992,124247,123506,122769,122037,121309,120586,119867,119152,118441,117735,117032,116334,115640,114951,114265,113584,112906,112233,111563,110898,110237,109579,108926,108276,107630,106988,106350,105716,105085,104459,103836,103216,102601,101989,101380,100776,100175,99577,98983,98393,97806,97223,96643,96067,95494,94924,94358,93795,93236,92680,92127,91577,91031,90488,89949,89412,88879,88349,87822,87298,86777,86260,85745,85234,84726,84220,83718,83219,82722,82229,81738,81251,80766,80285,79806,79330,78857,78386,77919,77454,76992,76533,76076,75623,75172,74723,74278,73835,73394,72957,72521,72089,71659,71232,70807,70384,69965,69547,69133,68720,68310,67903,67498,67095,66695,66297,65902,65509,65118,64730,64344,63960,63579,63199,62822,62448,62075,61705,61337,60971,60607,60246,59887,59530,59174,58822,58471,58122,57775,57431,57088,56748,56409,56073,55738,55406,55075,54747,54420,54096,53773,53453,53134,52817,52502,52189,51877,51568,51260,50955,50651,50349,50048,49750,49453,49158,48865,48574,48284,47996,47710,47425,47142,46861,46582,46304,46028,45753,45480,45209,44939,44671,44405,44140,43877,43615,43355,43096,42839,42584,42330,42077,41826,41577,41329,41082,40837,40594,40352,40111,39872,39634,39398,39163,38929,38697,38466,38237,38009,37782,37557,37333,37110,36889,36669,36450,36232,36016,35802,35588,35376,35165,34955,34747,34539,34333,34129,33925,33723,33521,33322,33123,32925,32729,32534,32340,32147,31955,31764,31575,31387,31199,31013,30828,30645,30462,30280,30099,29920,29741,29564,29388,29213,29038,28865,28693,28522,28352,28183,28014,27847,27681,27516,27352,27189,27027,26866,26705,26546,26388,26230,26074,25918,25764,25610,25457,25306,25155,25005,24855,24707,24560,24413,24268,24123,23979,23836,23694,23553,23412,23273,23134,22996,22859,22722,22587,22452,22318,22185,22053,21921,21790,21660,21531,21403,21275,21148,21022,20897,20772,20648,20525,20403,20281,20160,20040,19920,19801,19683,19566,19449,19333,19218,19103,18989,18876,18764,18652,18540,18430,18320,18211,18102,17994,17887,17780,17674,17569,17464,17360,17256,17153,17051,16949,16848,16748,16648,16548,16450,16352,16254,16157,16061,15965,15870,15775,15681,15587,15494,15402,15310,15219,15128,15038,14948,14859,14770,14682,14595,14508,14421,14335,14250,14165,14080,13996,13913,13830,13747,13665,13584,13503,13422,13342,13263,13183,13105,13027,12949,12872,12795,12719,12643,12567,12492,12418,12344,12270,12197,12124,12052,11980,11909,11838,11767,11697,11627,11558,11489,11420,11352,11284,11217,11150,11084,11018,10952,10887,10822,10757,10693,10629,10566,10503,10440,10378,10316,10254,10193,10132,10072,10012,9952,9893,9834,9775,9717,9659,9601,9544,9487,9431,9374,9318,9263,9208,9153,9098,9044,8990,8936,8883,8830,8777,8725,8673,8621,8570,8519,8468,8417,8367,8317,8268,8218,8169,8120,8072,8024,7976,7928,7881,7834,7787,7741,7695,7649,7603,7558,7513,7468,7424,7379,7335,7291,7248,7205,7162,7119,7077,7034,6992,6951,6909,6868,6827,6786,6746,6706,6666,6626,6586,6547,6508,6469,6431,6392,6354,6316,6279,6241,6204,6167,6130,6094,6057,6021,5985,5949,5914,5879,5844,5809,5774,5740,5705,5671,5638,5604,5571,5537,5504,5471,5439,5406,5374,5342,5310,5279,5247,5216,5185,5154,5123,5092,5062,5032,5002,4972,4942,4913,4884,4854,4825,4797,4768,4740,4711,4683,4655,4628,4600,4573,4545,4518,4491,4464,4438,4411,4385,4359,4333,4307,4281,4256,4230,4205,4180,4155,4130,4106,4081,4057,4033,4009,3985,3961,3937,3914,3890,3867,3844,3821,3798,3776,3753,3731,3709,3687,3665,3643,3621,3599,3578,3557,3535,3514,3493,3472,3452,3431,3411,3390,3370,3350,3330,3310,3290,3271,3251,3232,3213,3193,3174,3155,3137,3118,3099,3081,3062,3044,3026,3008,2990,2972,2954,2937,2919,2902,2885,2867,2850,2833,2816,2800,2783,2766,2750,2733,2717,2701,2685,2669,2653,2637,2621,2606,2590,2575,2559,2544,2529,2514,2499,2484,2469,2454,2440,2425,2411,2396,2382,2368,2354,2340,2326,2312,2298,2284,2271,2257,2244,2230,2217,2204,2191,2177,2164,2152,2139,2126,2113,2101,2088,2076,2063,2051,2039,2027,2015,2002,1991,1979,1967,1955,1943,1932,1920,1909,1898,1886,1875,1864,1853,1842,1831,1820,1809,1798,1787,1777,1766,1756,1745,1735,1724,1714,1704,1694,1683,1673,1663,1654,1644,1634,1624,1614,1605,1595,1586,1576,1567,1557,1548,1539,1530,1521,1512,1503,1494,1485,1476,1467,1458,1450,1441,1432,1424,1415,1407,1398,1390,1382,1374,1365,1357,1349,1341,1333,1325,1317,1309,1302,1294,1286,1278,1271,1263,1256,1248,1241,1233,1226,1219,1211,1204,1197,1190,1183,1176,1169,1162,1155,1148,1141,1134,1127,1121,1114,1107,1101,1094,1088,1081,1075,1068,1062,1056,1049,1043,1037,1031,1024,1018,1012,1006,1000,994,988,982,977,971,965,959,953,948,942,936,931,925,920,914,909,903,898,893,887,882,877,872,866,861,856,851,846,841,836,831,826,821,816,811,806,802,797,792,787,783,778,773,769,764,759,755,750,746,742,737,733,728,724,720,715,711,707,703,698,694,690,686,682,678,674,670,666,662,658,654,650,646,642,638,635,631,627,623,620,616,612,609,605,601,598,594,591,587,584,580,577,573,570,566,563,560,556,553,550,546,543,540,537,533,530,527,524,521,518,515,512,509,505,502,499,496,494,491,488,485,482,479,476,473,470,468,465,462,459,457,454,451,448,446,443,440,438,435,433,430,427,425,422,420,417,415,412,410,407,405,403,400,398,395,393,391,388,386,384,381,379,377,375,372,370,368,366,364,361,359,357,355,353,351,349,347,345,342,340,338,336,334,332,330,328,326,325,323,321,319,317,315,313,311,309,307,306,304,302,300,298,297,295,293,291,290,288,286,284,283,281,279,278,276,274,273,271,269,268,266,265,263,262,260,258,257,255,254,252,251,249,248,246,245,243,242,240,239,238,236,235,233,232,231,229,228,226,225,224,222,221,220,218,217,216,215,213,212,211,210,208,207,206,205,203,202,201,200,199,197,196,195,194,193,191,190,189,188,187,186,185,184,183,181,180,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,164,163,162,161,160,159,158,157,156,155,154,153,152,152,151,150,149,148,147,146,145,144,144,143,142,141,140,139,138,138,137,136,135,134,134,133,132,131,130,130,129,128,127,127,126,125,124,124,123,122,121,121,120,119,118,118,117,116,116,115,114,114,113,112,112,111,110,110,109,108,108,107,106,106,105,104,104,103,103,102,101,101,100,100,99,98,98,97,97,96,95,95,94,94,93,93,92,91,91,90,90,89,89,88,88,87,87,86,86,85,85,84,84,83,83,82,82,81,81,80,80,79,79,78,78,77,77,76,76,75,75,75,74,74,73,73,72,72,71,71,71,70,70,69,69,69,68,68,67,67,66,66,66,65,65,65,64]

C = 0
real_len = 0
c_len = 0
di = 1.006

random_err=[]

def count(C , real_len, leng):
	if real_len < 292738:
		real_len = real_len + leng
	else :
		if plut[C] * leng > int(random.random()	* quint32 ):
			C = C + 1
		real_len = real_len + leng
	return C,real_len
	
def c_len(C, real_len):
	if C == 0:
		c_len = real_len
	else:
		c_len = (math.pow(di,C+1250) - 1) / ( di - 1 )
	return c_len

def err(c_len, real_len):
	if (c_len - real_len) / real_len > 0:
		return (c_len - real_len) / real_len *100
	else:
		return - (c_len - real_len) / real_len *100
#################random trace ,flow 
# for j in range(500):
# 	npkt = int(random.random()*100000)
# 	C = 0
# 	real_len = 0

# 	for i in range(npkt):
# 		v = int(64+random.random()*1452)
# 		C,real_len = count(C,real_len,v)
# 	# print C+1250,real_len,c_len(C,real_len),err(c_len(C,real_len),real_len),j
# 	print j
# 	random_err.append(err(c_len(C,real_len),real_len))
# for i in random_err:
# 	print i
###################################################################################

#################random trace ,pkt
# for j in range(500):
# 	npkt = int(math.pow(1.03466,j))
# 	# print "npkt",npkt
# 	C = 0
# 	real_len = 0

# 	for i in range(npkt):
# 		v = 1
# 		C,real_len = count(C,real_len,v)
# 	# print C+1250,real_len,c_len(C,real_len),err(c_len(C,real_len),real_len),j
# 	print j
# 	random_err.append(err(c_len(C,real_len),real_len))
# for i in random_err:
# 	print i
# 	pass
###################################################################################
for j in range(500):
	npkt = int(math.pow(1.03466,j))
	print npkt

############real trace
# for i in range(300):
# 	f = open('a.txt','r')
# 	numline = 0
# 	C = 0
# 	real_len = 0
# 	for line in open('a.txt'):
# 	    line = f.readline()
# 	    # print line
# 	    pktlen = int(line)
# 	    # print pktlen
# 	    numline = numline + 1
# 	    C,real_len = count(C,real_len,pktlen)
# 	    if numline > 200000:
# 	    	break
# 	# print C+1250,real_len,c_len(C,real_len),err(c_len(C,real_len),real_len)  
# 	print err(c_len(C,real_len),real_len) 
# 	f.close() 

